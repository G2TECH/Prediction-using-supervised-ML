# Import libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

# Load dataset
url = 'http://bit.ly/w-data'
data = pd.read_csv(url)

# Split data into predictor and response variables
X = data.iloc[:, :-1].values
y = data.iloc[:, -1].values

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

# Fit linear regression model on training set
regressor = LinearRegression()
regressor.fit(X_train, y_train)

# Predict percentage score on testing set
y_pred = regressor.predict(X_test)

# Evaluate performance of model using mean squared error and R-squared
from sklearn.metrics import mean_squared_error, r2_score
ms = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print('Mean squared error:', ms)
print('R-squared:', r2)

# Predict percentage score for a student who studies for 9.25 hours per day
hours = [[9.25]]
score = regressor.predict(hours)
print('Predicted percentage score for a student who studies for 9.25 hours per day:', score[0])

# Plot the regression line
line = regressor.coef_*X+regressor.intercept_
plt.scatter(X, y)
plt.plot(X, line)
plt.show()
